@model PersonalFiles.Models.RegisterViewModel

@{
    ViewData["Title"] = "Register";
}

<div class="row">
    <div class="col-md-5">
        <section id="registerForm">
            @using (Html.BeginForm("RegisterUser", "Authorization", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.UserRole.Roles)

                <h2>Регистрация</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                    <div>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.PasswordConfirm, new { @class = "control-label" })
                    <div>
                        @Html.PasswordFor(m => m.PasswordConfirm, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.PasswordConfirm, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.MiddleName, new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.DateOfBirth, new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Gender, new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(m => m.Gender, new SelectList(Enum.GetValues(typeof(Gender))), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserRole, new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(m => m.UserRole.SelectedRoleId, new SelectList(Model.UserRole.Roles, "Id", "Name", Model.UserRole.SelectedRoleId), new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        <input type="submit" value="Зарегистрироваться" class="btn btn-success" />
                    </div>
                </div>
            }
        </section>
    </div>
</div>

